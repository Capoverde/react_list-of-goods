{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABETICALLY","sort","a","b","localeCompare","LENGTH","length","reverse","App","state","NONE","handleSortAlphabetically","setState","handleSortByLength","handleGoodsReverse","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAYzB,OAVIC,IAAaJ,EAASO,eACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACnCN,IAAaJ,EAASY,QAC/BN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGvCR,GACFC,EAAaQ,UAGRR,G,SA5BJN,O,mCAAAA,I,mBAAAA,I,gBAAAA,M,KAoCE,IAAMe,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEC,yBAA2B,WACzB,EAAKC,SAAS,CAAEf,SAAUJ,EAASO,kBAPvC,EAUEa,mBAAqB,WACnB,EAAKD,SAAS,CAAEf,SAAUJ,EAASY,UAXvC,EAcES,mBAAqB,WACnB,EAAKF,UAAS,SAAAH,GACZ,MAAO,CACLX,YAAaW,EAAMX,gBAjB3B,EAsBEiB,MAAQ,WACN,EAAKH,SAAS,CACZf,SAAUJ,EAASiB,KACnBZ,YAAY,KAzBlB,4CA6BE,WACE,MAAiCkB,KAAKP,MAA9BZ,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWpB,IAAaJ,EAASO,eAC7B,iBACA,kBACJmB,QAASH,KAAKL,yBALhB,iCAUA,wBACEO,KAAK,SACLD,UAAWpB,IAAaJ,EAASY,OAC7B,iBACA,kBACJc,QAASH,KAAKH,mBALhB,4BAUA,wBACEK,KAAK,SACLD,WAA0B,IAAfnB,EACP,oBACA,6BACJqB,QAASH,KAAKF,mBALhB,sBASEjB,IAAaJ,EAASiB,OAAuB,IAAfZ,IAE3B,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,MAHhB,sBAWP,6BACE,6BACGpB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CsB,KAAI,SAAAC,GAAI,OACP,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBAjFzB,GAAyBC,IAAMC,WClD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5801da2d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABETICALLY,\n  LENGTH,\n  NONE,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABETICALLY) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABETICALLY });\n  };\n\n  handleSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleGoodsReverse = () => {\n    this.setState(state => {\n      return {\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortType === SortType.ALPHABETICALLY\n              ? 'button is-info'\n              : 'button is-light'}\n            onClick={this.handleSortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === SortType.LENGTH\n              ? 'button is-info'\n              : 'button is-light'}\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed === true\n              ? 'button is-success'\n              : 'button is-success is-light'}\n            onClick={this.handleGoodsReverse}\n          >\n            Reverse\n          </button>\n          {(sortType !== SortType.NONE || isReversed === true)\n             && (\n               <button\n                 type=\"button\"\n                 className=\"button is-danger is-light\"\n                 onClick={this.reset}\n               >\n                 Reset\n               </button>\n             )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map(good => (\n                <li key={good} data-cy=\"Good\">{good}</li>\n              ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}